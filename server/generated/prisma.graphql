# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Center implements Node {
  id: ID!
  name: String!
  description: String
  capacity: Int!
  facilities: String!
  address: String!
  imageUrl1: String!
  imageUrl2: String!
  phoneNo: String!
  createdAt: DateTime!
  owner(where: UserWhereInput): User!
}

type Event implements Node {
  id: ID!
  name: String!
  description: String!
  startDate: DateTime!
  createdAt: DateTime!
  endDate: DateTime!
  owner(where: UserWhereInput): User!
}

type User implements Node {
  id: ID!
  name: String!
  username: String!
  email: String!
  password: String!
  profileImage: String
  createdAt: DateTime!
  centers(where: CenterWhereInput, orderBy: CenterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Center!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  role: Role
}


#
# Other Types
#

type AggregateCenter {
  count: Int!
}

type AggregateEvent {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type CenterConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CenterEdge]!
  aggregate: AggregateCenter!
}

input CenterCreateInput {
  name: String!
  description: String
  capacity: Int!
  facilities: String!
  address: String!
  imageUrl1: String!
  imageUrl2: String!
  phoneNo: String!
  owner: UserCreateOneWithoutCentersInput!
}

input CenterCreateManyWithoutOwnerInput {
  create: [CenterCreateWithoutOwnerInput!]
  connect: [CenterWhereUniqueInput!]
}

input CenterCreateWithoutOwnerInput {
  name: String!
  description: String
  capacity: Int!
  facilities: String!
  address: String!
  imageUrl1: String!
  imageUrl2: String!
  phoneNo: String!
}

"""
An edge in a connection.
"""
type CenterEdge {
  """
  The item at the end of the edge.
  """
  node: Center!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CenterOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  capacity_ASC
  capacity_DESC
  facilities_ASC
  facilities_DESC
  address_ASC
  address_DESC
  imageUrl1_ASC
  imageUrl1_DESC
  imageUrl2_ASC
  imageUrl2_DESC
  phoneNo_ASC
  phoneNo_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CenterPreviousValues {
  id: ID!
  name: String!
  description: String
  capacity: Int!
  facilities: String!
  address: String!
  imageUrl1: String!
  imageUrl2: String!
  phoneNo: String!
  createdAt: DateTime!
}

type CenterSubscriptionPayload {
  mutation: MutationType!
  node: Center
  updatedFields: [String!]
  previousValues: CenterPreviousValues
}

input CenterSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CenterSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CenterSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CenterWhereInput
}

input CenterUpdateInput {
  name: String
  description: String
  capacity: Int
  facilities: String
  address: String
  imageUrl1: String
  imageUrl2: String
  phoneNo: String
  owner: UserUpdateOneWithoutCentersInput
}

input CenterUpdateManyWithoutOwnerInput {
  create: [CenterCreateWithoutOwnerInput!]
  connect: [CenterWhereUniqueInput!]
  disconnect: [CenterWhereUniqueInput!]
  delete: [CenterWhereUniqueInput!]
  update: [CenterUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [CenterUpsertWithWhereUniqueWithoutOwnerInput!]
}

input CenterUpdateWithoutOwnerDataInput {
  name: String
  description: String
  capacity: Int
  facilities: String
  address: String
  imageUrl1: String
  imageUrl2: String
  phoneNo: String
}

input CenterUpdateWithWhereUniqueWithoutOwnerInput {
  where: CenterWhereUniqueInput!
  data: CenterUpdateWithoutOwnerDataInput!
}

input CenterUpsertWithWhereUniqueWithoutOwnerInput {
  where: CenterWhereUniqueInput!
  update: CenterUpdateWithoutOwnerDataInput!
  create: CenterCreateWithoutOwnerInput!
}

input CenterWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CenterWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CenterWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String
  """
  All values that are not equal to given value.
  """
  description_not: String
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  """
  All values less than the given value.
  """
  description_lt: String
  """
  All values less than or equal the given value.
  """
  description_lte: String
  """
  All values greater than the given value.
  """
  description_gt: String
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  """
  All values containing the given string.
  """
  description_contains: String
  """
  All values not containing the given string.
  """
  description_not_contains: String
  """
  All values starting with the given string.
  """
  description_starts_with: String
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  """
  All values ending with the given string.
  """
  description_ends_with: String
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  capacity: Int
  """
  All values that are not equal to given value.
  """
  capacity_not: Int
  """
  All values that are contained in given list.
  """
  capacity_in: [Int!]
  """
  All values that are not contained in given list.
  """
  capacity_not_in: [Int!]
  """
  All values less than the given value.
  """
  capacity_lt: Int
  """
  All values less than or equal the given value.
  """
  capacity_lte: Int
  """
  All values greater than the given value.
  """
  capacity_gt: Int
  """
  All values greater than or equal the given value.
  """
  capacity_gte: Int
  facilities: String
  """
  All values that are not equal to given value.
  """
  facilities_not: String
  """
  All values that are contained in given list.
  """
  facilities_in: [String!]
  """
  All values that are not contained in given list.
  """
  facilities_not_in: [String!]
  """
  All values less than the given value.
  """
  facilities_lt: String
  """
  All values less than or equal the given value.
  """
  facilities_lte: String
  """
  All values greater than the given value.
  """
  facilities_gt: String
  """
  All values greater than or equal the given value.
  """
  facilities_gte: String
  """
  All values containing the given string.
  """
  facilities_contains: String
  """
  All values not containing the given string.
  """
  facilities_not_contains: String
  """
  All values starting with the given string.
  """
  facilities_starts_with: String
  """
  All values not starting with the given string.
  """
  facilities_not_starts_with: String
  """
  All values ending with the given string.
  """
  facilities_ends_with: String
  """
  All values not ending with the given string.
  """
  facilities_not_ends_with: String
  address: String
  """
  All values that are not equal to given value.
  """
  address_not: String
  """
  All values that are contained in given list.
  """
  address_in: [String!]
  """
  All values that are not contained in given list.
  """
  address_not_in: [String!]
  """
  All values less than the given value.
  """
  address_lt: String
  """
  All values less than or equal the given value.
  """
  address_lte: String
  """
  All values greater than the given value.
  """
  address_gt: String
  """
  All values greater than or equal the given value.
  """
  address_gte: String
  """
  All values containing the given string.
  """
  address_contains: String
  """
  All values not containing the given string.
  """
  address_not_contains: String
  """
  All values starting with the given string.
  """
  address_starts_with: String
  """
  All values not starting with the given string.
  """
  address_not_starts_with: String
  """
  All values ending with the given string.
  """
  address_ends_with: String
  """
  All values not ending with the given string.
  """
  address_not_ends_with: String
  imageUrl1: String
  """
  All values that are not equal to given value.
  """
  imageUrl1_not: String
  """
  All values that are contained in given list.
  """
  imageUrl1_in: [String!]
  """
  All values that are not contained in given list.
  """
  imageUrl1_not_in: [String!]
  """
  All values less than the given value.
  """
  imageUrl1_lt: String
  """
  All values less than or equal the given value.
  """
  imageUrl1_lte: String
  """
  All values greater than the given value.
  """
  imageUrl1_gt: String
  """
  All values greater than or equal the given value.
  """
  imageUrl1_gte: String
  """
  All values containing the given string.
  """
  imageUrl1_contains: String
  """
  All values not containing the given string.
  """
  imageUrl1_not_contains: String
  """
  All values starting with the given string.
  """
  imageUrl1_starts_with: String
  """
  All values not starting with the given string.
  """
  imageUrl1_not_starts_with: String
  """
  All values ending with the given string.
  """
  imageUrl1_ends_with: String
  """
  All values not ending with the given string.
  """
  imageUrl1_not_ends_with: String
  imageUrl2: String
  """
  All values that are not equal to given value.
  """
  imageUrl2_not: String
  """
  All values that are contained in given list.
  """
  imageUrl2_in: [String!]
  """
  All values that are not contained in given list.
  """
  imageUrl2_not_in: [String!]
  """
  All values less than the given value.
  """
  imageUrl2_lt: String
  """
  All values less than or equal the given value.
  """
  imageUrl2_lte: String
  """
  All values greater than the given value.
  """
  imageUrl2_gt: String
  """
  All values greater than or equal the given value.
  """
  imageUrl2_gte: String
  """
  All values containing the given string.
  """
  imageUrl2_contains: String
  """
  All values not containing the given string.
  """
  imageUrl2_not_contains: String
  """
  All values starting with the given string.
  """
  imageUrl2_starts_with: String
  """
  All values not starting with the given string.
  """
  imageUrl2_not_starts_with: String
  """
  All values ending with the given string.
  """
  imageUrl2_ends_with: String
  """
  All values not ending with the given string.
  """
  imageUrl2_not_ends_with: String
  phoneNo: String
  """
  All values that are not equal to given value.
  """
  phoneNo_not: String
  """
  All values that are contained in given list.
  """
  phoneNo_in: [String!]
  """
  All values that are not contained in given list.
  """
  phoneNo_not_in: [String!]
  """
  All values less than the given value.
  """
  phoneNo_lt: String
  """
  All values less than or equal the given value.
  """
  phoneNo_lte: String
  """
  All values greater than the given value.
  """
  phoneNo_gt: String
  """
  All values greater than or equal the given value.
  """
  phoneNo_gte: String
  """
  All values containing the given string.
  """
  phoneNo_contains: String
  """
  All values not containing the given string.
  """
  phoneNo_not_contains: String
  """
  All values starting with the given string.
  """
  phoneNo_starts_with: String
  """
  All values not starting with the given string.
  """
  phoneNo_not_starts_with: String
  """
  All values ending with the given string.
  """
  phoneNo_ends_with: String
  """
  All values not ending with the given string.
  """
  phoneNo_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  owner: UserWhereInput
}

input CenterWhereUniqueInput {
  id: ID
}

scalar DateTime

"""
A connection to a list of items.
"""
type EventConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [EventEdge]!
  aggregate: AggregateEvent!
}

input EventCreateInput {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  owner: UserCreateOneWithoutEventsInput!
}

input EventCreateManyWithoutOwnerInput {
  create: [EventCreateWithoutOwnerInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreateWithoutOwnerInput {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
}

"""
An edge in a connection.
"""
type EventEdge {
  """
  The item at the end of the edge.
  """
  node: Event!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum EventOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  startDate_ASC
  startDate_DESC
  createdAt_ASC
  createdAt_DESC
  endDate_ASC
  endDate_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EventPreviousValues {
  id: ID!
  name: String!
  description: String!
  startDate: DateTime!
  createdAt: DateTime!
  endDate: DateTime!
}

type EventSubscriptionPayload {
  mutation: MutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

input EventSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [EventSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [EventSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: EventWhereInput
}

input EventUpdateInput {
  name: String
  description: String
  startDate: DateTime
  endDate: DateTime
  owner: UserUpdateOneWithoutEventsInput
}

input EventUpdateManyWithoutOwnerInput {
  create: [EventCreateWithoutOwnerInput!]
  connect: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  delete: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutOwnerInput!]
}

input EventUpdateWithoutOwnerDataInput {
  name: String
  description: String
  startDate: DateTime
  endDate: DateTime
}

input EventUpdateWithWhereUniqueWithoutOwnerInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutOwnerDataInput!
}

input EventUpsertWithWhereUniqueWithoutOwnerInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutOwnerDataInput!
  create: EventCreateWithoutOwnerInput!
}

input EventWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [EventWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [EventWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String
  """
  All values that are not equal to given value.
  """
  description_not: String
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  """
  All values less than the given value.
  """
  description_lt: String
  """
  All values less than or equal the given value.
  """
  description_lte: String
  """
  All values greater than the given value.
  """
  description_gt: String
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  """
  All values containing the given string.
  """
  description_contains: String
  """
  All values not containing the given string.
  """
  description_not_contains: String
  """
  All values starting with the given string.
  """
  description_starts_with: String
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  """
  All values ending with the given string.
  """
  description_ends_with: String
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  startDate: DateTime
  """
  All values that are not equal to given value.
  """
  startDate_not: DateTime
  """
  All values that are contained in given list.
  """
  startDate_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  startDate_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  startDate_lt: DateTime
  """
  All values less than or equal the given value.
  """
  startDate_lte: DateTime
  """
  All values greater than the given value.
  """
  startDate_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  startDate_gte: DateTime
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  endDate: DateTime
  """
  All values that are not equal to given value.
  """
  endDate_not: DateTime
  """
  All values that are contained in given list.
  """
  endDate_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  endDate_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  endDate_lt: DateTime
  """
  All values less than or equal the given value.
  """
  endDate_lte: DateTime
  """
  All values greater than the given value.
  """
  endDate_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  endDate_gte: DateTime
  owner: UserWhereInput
}

input EventWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createCenter(data: CenterCreateInput!): Center!
  createEvent(data: EventCreateInput!): Event!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCenter(data: CenterUpdateInput!, where: CenterWhereUniqueInput!): Center
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCenter(where: CenterWhereUniqueInput!): Center
  deleteEvent(where: EventWhereUniqueInput!): Event
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertCenter(where: CenterWhereUniqueInput!, create: CenterCreateInput!, update: CenterUpdateInput!): Center!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManyCenters(data: CenterUpdateInput!, where: CenterWhereInput): BatchPayload!
  updateManyEvents(data: EventUpdateInput!, where: EventWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCenters(where: CenterWhereInput): BatchPayload!
  deleteManyEvents(where: EventWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  centers(where: CenterWhereInput, orderBy: CenterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Center]!
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  user(where: UserWhereUniqueInput!): User
  center(where: CenterWhereUniqueInput!): Center
  event(where: EventWhereUniqueInput!): Event
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  centersConnection(where: CenterWhereInput, orderBy: CenterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CenterConnection!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  center(where: CenterSubscriptionWhereInput): CenterSubscriptionPayload
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  username: String!
  email: String!
  password: String!
  profileImage: String
  role: Role
  centers: CenterCreateManyWithoutOwnerInput
  events: EventCreateManyWithoutOwnerInput
}

input UserCreateOneWithoutCentersInput {
  create: UserCreateWithoutCentersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutEventsInput {
  create: UserCreateWithoutEventsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCentersInput {
  name: String!
  username: String!
  email: String!
  password: String!
  profileImage: String
  role: Role
  events: EventCreateManyWithoutOwnerInput
}

input UserCreateWithoutEventsInput {
  name: String!
  username: String!
  email: String!
  password: String!
  profileImage: String
  role: Role
  centers: CenterCreateManyWithoutOwnerInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  profileImage_ASC
  profileImage_DESC
  createdAt_ASC
  createdAt_DESC
  role_ASC
  role_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  username: String!
  email: String!
  password: String!
  profileImage: String
  createdAt: DateTime!
  role: Role
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  username: String
  email: String
  password: String
  profileImage: String
  role: Role
  centers: CenterUpdateManyWithoutOwnerInput
  events: EventUpdateManyWithoutOwnerInput
}

input UserUpdateOneWithoutCentersInput {
  create: UserCreateWithoutCentersInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutCentersDataInput
  upsert: UserUpsertWithoutCentersInput
}

input UserUpdateOneWithoutEventsInput {
  create: UserCreateWithoutEventsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutEventsDataInput
  upsert: UserUpsertWithoutEventsInput
}

input UserUpdateWithoutCentersDataInput {
  name: String
  username: String
  email: String
  password: String
  profileImage: String
  role: Role
  events: EventUpdateManyWithoutOwnerInput
}

input UserUpdateWithoutEventsDataInput {
  name: String
  username: String
  email: String
  password: String
  profileImage: String
  role: Role
  centers: CenterUpdateManyWithoutOwnerInput
}

input UserUpsertWithoutCentersInput {
  update: UserUpdateWithoutCentersDataInput!
  create: UserCreateWithoutCentersInput!
}

input UserUpsertWithoutEventsInput {
  update: UserUpdateWithoutEventsDataInput!
  create: UserCreateWithoutEventsInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  username: String
  """
  All values that are not equal to given value.
  """
  username_not: String
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  """
  All values less than the given value.
  """
  username_lt: String
  """
  All values less than or equal the given value.
  """
  username_lte: String
  """
  All values greater than the given value.
  """
  username_gt: String
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  """
  All values containing the given string.
  """
  username_contains: String
  """
  All values not containing the given string.
  """
  username_not_contains: String
  """
  All values starting with the given string.
  """
  username_starts_with: String
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  """
  All values ending with the given string.
  """
  username_ends_with: String
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String
  """
  All values that are not equal to given value.
  """
  password_not: String
  """
  All values that are contained in given list.
  """
  password_in: [String!]
  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]
  """
  All values less than the given value.
  """
  password_lt: String
  """
  All values less than or equal the given value.
  """
  password_lte: String
  """
  All values greater than the given value.
  """
  password_gt: String
  """
  All values greater than or equal the given value.
  """
  password_gte: String
  """
  All values containing the given string.
  """
  password_contains: String
  """
  All values not containing the given string.
  """
  password_not_contains: String
  """
  All values starting with the given string.
  """
  password_starts_with: String
  """
  All values not starting with the given string.
  """
  password_not_starts_with: String
  """
  All values ending with the given string.
  """
  password_ends_with: String
  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  profileImage: String
  """
  All values that are not equal to given value.
  """
  profileImage_not: String
  """
  All values that are contained in given list.
  """
  profileImage_in: [String!]
  """
  All values that are not contained in given list.
  """
  profileImage_not_in: [String!]
  """
  All values less than the given value.
  """
  profileImage_lt: String
  """
  All values less than or equal the given value.
  """
  profileImage_lte: String
  """
  All values greater than the given value.
  """
  profileImage_gt: String
  """
  All values greater than or equal the given value.
  """
  profileImage_gte: String
  """
  All values containing the given string.
  """
  profileImage_contains: String
  """
  All values not containing the given string.
  """
  profileImage_not_contains: String
  """
  All values starting with the given string.
  """
  profileImage_starts_with: String
  """
  All values not starting with the given string.
  """
  profileImage_not_starts_with: String
  """
  All values ending with the given string.
  """
  profileImage_ends_with: String
  """
  All values not ending with the given string.
  """
  profileImage_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  role: Role
  """
  All values that are not equal to given value.
  """
  role_not: Role
  """
  All values that are contained in given list.
  """
  role_in: [Role!]
  """
  All values that are not contained in given list.
  """
  role_not_in: [Role!]
  centers_every: CenterWhereInput
  centers_some: CenterWhereInput
  centers_none: CenterWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
}

input UserWhereUniqueInput {
  id: ID
  username: String
  email: String
}
